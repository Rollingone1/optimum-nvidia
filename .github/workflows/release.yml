name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  pypi:
    name: Publish release artifact on PyPi repository
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.12']

    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install setuptools wheel

      - run: |
          python setup.py sdist bdist_wheel
      - run: |
          pip install twine

      - name: Upload to PyPi
        env:
          OPTIMUM_NVIDIA_PYPI_TOKEN: ${{ secrets.OPTIMUM_NVIDIA_PYPI_TOKEN }}
        run: |
          twine upload dist/* -u __token__ -p "$OPTIMUM_NVIDIA_PYPI_TOKEN"

  docker:
    name: Push Docker container to Docker Hub and Github Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: huggingface/optimum-nvidia
          tags: |
            type=sha
            type=pep440,pattern={{raw}},suffix=-py310
            type=semver,pattern={{raw}},suffix=-py310

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: huggingface/optimum-nvidia
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true